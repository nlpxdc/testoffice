<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.cjf.testoffice.dao.UserMapper">
  <resultMap id="BaseResultMap" type="io.cjf.testoffice.po.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="age" jdbcType="SMALLINT" property="age" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="bonus" jdbcType="REAL" property="bonus" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, name, gender, age, role_id, salary, bonus, enabled, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.cjf.testoffice.po.User">
    insert into user (user_id, name, gender, 
      age, role_id, salary, 
      bonus, enabled, create_time
      )
    values (#{userId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{age,jdbcType=SMALLINT}, #{roleId,jdbcType=INTEGER}, #{salary,jdbcType=DOUBLE}, 
      #{bonus,jdbcType=REAL}, #{enabled,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.cjf.testoffice.po.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="bonus != null">
        bonus,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=SMALLINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="bonus != null">
        #{bonus,jdbcType=REAL},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.cjf.testoffice.po.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="bonus != null">
        bonus = #{bonus,jdbcType=REAL},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.cjf.testoffice.po.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      age = #{age,jdbcType=SMALLINT},
      role_id = #{roleId,jdbcType=INTEGER},
      salary = #{salary,jdbcType=DOUBLE},
      bonus = #{bonus,jdbcType=REAL},
      enabled = #{enabled,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <!--custom-->
  <select id="selectAll" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id in
    <foreach item="userId" index="index" collection="userIds"
             open="(" separator="," close=")">
      #{userId}
    </foreach>
  </select>
</mapper>